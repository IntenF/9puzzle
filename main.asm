SET w 1
MAIN:
CALL MANHATTAN
COPY w max_depth
ADD max_depth 1
LOOP:
CALL CHECK_ALL
CHECK w 1
JNZ PROC_END
CALL MANHATTAN
ADDREG w log_count
LESS w max_depth
JNZ GOUP
CALL UNMOVE
SET address 16
ADDREG address log_count
LOAD address w
CHECK w UP
JNZ GODOWN
CHECK w DOWN
JNZ GORIGHT
CHECK w RIGHT
JNZ GOLEFT
CHECK w LEFT
JNZ GOEND

GOUP:
SET w UP
CALL TRYMOVE
CHECK w 1
JNZ LOOP
GODOWN:
SET w DOWN
CALL TRYMOVE
CHECK w 1
JNZ LOOP
GORIGHT:
SET w RIGHT
CALL TRYMOVE
CHECK w 1
JNZ LOOP
GOLEFT:
SET w LEFT
CALL TRYMOVE
CHECK w 1
JNZ LOOP

GOEND:
CALL UNMOVE
SET address 16
ADDREG address log_count
LOAD address w
CHECK w UP
JNZ GODOWN
CHECK w DOWN
JNZ GORIGHT
CHECK w RIGHT
JNZ GOLEFT
CHECK w LEFT
JNZ GOEND
SET log_count 0
SET w 32
LESS max_depth w
ADD max_depth 1
JNZ LOOP

PROC_END:
COPY log_count CHECK_REG
GOTO PROC_END

PUSH_LOG: #push w to mem
SET address 16
ADDREG address log_count
WRITE address w
ADD log_count 1
RETURN

UP_OK: #OK:1 NOT:0
DIV pos w
CHECK w 0
JNZ UP_OK_FALSE
SET w 1
RETURN
UP_OK_FALSE:
SET w 0
RETURN

DOWN_OK: #OK:1 NOT:0
DIV pos w
CHECK w 2
JNZ DOWN_OK_FALSE
SET w 1
RETURN
DOWN_OK_FALSE:
SET w 0
RETURN

RIGHT_OK: #OK:1 NOT:0
MOD pos w
CHECK w 2
JNZ RIGHT_OK_FALSE
SET w 1
RETURN
RIGHT_OK_FALSE:
SET w 0
RETURN

LEFT_OK: #OK:1 NOT:0
MOD pos w
CHECK w 0
JNZ LEFT_OK_FALSE
SET w 1
RETURN
LEFT_OK_FALSE:
SET w 0
RETURN

TRYMOVE:
COPY w direction
INV w inverse_direction
COPY log_count w
ADD w 15 #w = log_count - 1
LOAD w w
CHECKR w inverse_direction
JNZ MOVE_GIVE_UP
CHECK direction UP 
JNZ MOVE_UP
CHECK direction DOWN
JNZ MOVE_DOWN
CHECK direction RIGHT
JNZ MOVE_RIGHT
CHECK direction LEFT
JNZ MOVE_LEFT
MOVE_UP:
CALL UP_OK
CHECK w 1
JNZ YES_MOVE
GOTO MOVE_GIVE_UP
MOVE_DOWN:
CALL DOWN_OK
CHECK w 1
JNZ YES_MOVE
GOTO MOVE_GIVE_UP
MOVE_RIGHT:
CALL RIGHT_OK
CHECK w 1
JNZ YES_MOVE
GOTO MOVE_GIVE_UP
MOVE_LEFT:
CALL LEFT_OK
CHECK w 1
JNZ YES_MOVE
GOTO MOVE_GIVE_UP
YES_MOVE:
COPY direction w
CALL PUSH_LOG
COPY pos nextpos
ADDREG nextpos direction
LOAD nextpos w
WRITE pos w
SET w 8
WRITE nextpos w
COPY nextpos pos
SET w 1
RETURN
MOVE_GIVE_UP:
SET w 0
RETURN

UNMOVE:
SUB log_count 1
SET address 16
ADDREG address log_count
LOAD address w
INV w direction
COPY pos nextpos
ADDREG nextpos direction
LOAD nextpos w
WRITE pos w
SET w 8
WRITE nextpos w
COPY nextpos pos
SET w 1
RETURN

CHECK_ALL: #OK:1 NOT:0
SET w 0
CHECK_LOOP:
COPY w address
LOAD address tmp
CHECKR w tmp
JNZ CHECK_NEXT
SET w 0
RETURN
CHECK_NEXT:
CHECK w 8
JNZ CHECK_ALL_END
ADD w 1
GOTO CHECK_LOOP
CHECK_ALL_END:
SET w 1
RETURN

MANHATTAN:
SET count 0
SET sum 0
MANHATTAN_LOOP:
COPY count address
LOAD address tmp
CHECK tmp 8
JNZ MANHATTAN_NEXT_TABLE
AUP tmp count
ADDREG sum w
ADW tmp count
ADDREG sum w
MANHATTAN_NEXT_TABLE:
CHECK count 8
JNZ MANHATTAN_END
ADD count 1
GOTO MANHATTAN_LOOP
MANHATTAN_END:
COPY sum w
RETURN
